@model RestaurantRaterMVC.Models.Restaurant.RestaurantCreate

@{
    ViewData["Title"] = "Create a Restaurant";

}
<!--executes model validation functionality-->
@section Scripts {
@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<h1>Create a Restaurant</h1>
<hr />

<!--Could also do most of this with @Html thing-- module 3.02 for reference-->
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <!--brings in the notations added in Create model automatically to the front end via ModelState-->
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Name" class="control-label"> </label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Location" class="control-label"></label>
                <input asp-for="Location" class="form-control" />
                <span asp-validation-for="Location" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
        <div>
            <a asp-action="Index">Back to List</a>
        </div>
    </div>
</div>
<!--IMPORTANT: View names need to correspond with the method names in controller, so that when "action" is specified, it follows the correct route (probably oversimplified, but good enough for now); To see default route, go to bottom of startup page-->
